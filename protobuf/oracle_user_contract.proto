syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "callback_input.proto";

option csharp_namespace = "AElf.Contracts.OracleUser";

service OracleUserContract {
  option (aelf.csharp_state) = "AElf.Contracts.OracleUser.OracleUserContractState";

  rpc Initialize (aelf.Address) returns (google.protobuf.Empty) {}
  rpc QueryTemperature (QueryTemperatureInput) returns (aelf.Hash) {}

  rpc RecordTemperature (CallbackInput) returns (google.protobuf.Empty) {}
  rpc RecordPrice (CallbackInput) returns (google.protobuf.Empty) {}

  rpc GetHistoryTemperatures (google.protobuf.Empty) returns (TemperatureRecordList) {
    option (aelf.is_view) = true;
  }
  rpc GetHistoryPrices (google.protobuf.Empty) returns (PriceRecordList) {
    option (aelf.is_view) = true;
  }
}

message QueryTemperatureInput {
  aelf.Address oracle_contract_address = 1;
  aelf.Address aggregator_contract_address = 2;
  repeated aelf.Address designated_nodes = 3;
  int32 aggregate_threshold = 4;
}

message TemperatureRecord {
  string temperature = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message TemperatureRecordList {
  repeated TemperatureRecord value = 1;
}

// Events
message QueryDataRecorded {
  option (aelf.is_event) = true;
  string data = 1;
  google.protobuf.Timestamp timestamp = 2;
}
    
message PriceRecord {
  string token = 1;
  string price = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message PriceRecordList {
  repeated PriceRecord value = 1;
}
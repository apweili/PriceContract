// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: aedpos_contract.proto
// </auto-generated>
// Original file comments:
// *
// AEDPoS contract.
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.Consensus.AEDPoS {

  #region Events
  public partial class IrreversibleBlockFound : aelf::IEvent<IrreversibleBlockFound>
  {
    public global::System.Collections.Generic.IEnumerable<IrreversibleBlockFound> GetIndexed()
    {
      return new List<IrreversibleBlockFound>
      {
      new IrreversibleBlockFound
      {
        IrreversibleBlockHeight = IrreversibleBlockHeight
      },
      };
    }

    public IrreversibleBlockFound GetNonIndexed()
    {
      return new IrreversibleBlockFound
      {
      };
    }
  }

  public partial class IrreversibleBlockHeightUnacceptable : aelf::IEvent<IrreversibleBlockHeightUnacceptable>
  {
    public global::System.Collections.Generic.IEnumerable<IrreversibleBlockHeightUnacceptable> GetIndexed()
    {
      return new List<IrreversibleBlockHeightUnacceptable>
      {
      };
    }

    public IrreversibleBlockHeightUnacceptable GetNonIndexed()
    {
      return new IrreversibleBlockHeightUnacceptable
      {
        DistanceToIrreversibleBlockHeight = DistanceToIrreversibleBlockHeight,
      };
    }
  }

  public partial class MiningInformationUpdated : aelf::IEvent<MiningInformationUpdated>
  {
    public global::System.Collections.Generic.IEnumerable<MiningInformationUpdated> GetIndexed()
    {
      return new List<MiningInformationUpdated>
      {
      new MiningInformationUpdated
      {
        Pubkey = Pubkey
      },
      new MiningInformationUpdated
      {
        MiningTime = MiningTime
      },
      new MiningInformationUpdated
      {
        Behaviour = Behaviour
      },
      new MiningInformationUpdated
      {
        BlockHeight = BlockHeight
      },
      new MiningInformationUpdated
      {
        PreviousBlockHash = PreviousBlockHash
      },
      };
    }

    public MiningInformationUpdated GetNonIndexed()
    {
      return new MiningInformationUpdated
      {
      };
    }
  }

  public partial class SecretSharingInformation : aelf::IEvent<SecretSharingInformation>
  {
    public global::System.Collections.Generic.IEnumerable<SecretSharingInformation> GetIndexed()
    {
      return new List<SecretSharingInformation>
      {
      new SecretSharingInformation
      {
        PreviousRound = PreviousRound
      },
      };
    }

    public SecretSharingInformation GetNonIndexed()
    {
      return new SecretSharingInformation
      {
        CurrentRoundId = CurrentRoundId,
        PreviousRoundId = PreviousRoundId,
      };
    }
  }

  public partial class MiningRewardGenerated : aelf::IEvent<MiningRewardGenerated>
  {
    public global::System.Collections.Generic.IEnumerable<MiningRewardGenerated> GetIndexed()
    {
      return new List<MiningRewardGenerated>
      {
      new MiningRewardGenerated
      {
        TermNumber = TermNumber
      },
      };
    }

    public MiningRewardGenerated GetNonIndexed()
    {
      return new MiningRewardGenerated
      {
        Amount = Amount,
      };
    }
  }

  public partial class MinerReplaced : aelf::IEvent<MinerReplaced>
  {
    public global::System.Collections.Generic.IEnumerable<MinerReplaced> GetIndexed()
    {
      return new List<MinerReplaced>
      {
      };
    }

    public MinerReplaced GetNonIndexed()
    {
      return new MinerReplaced
      {
        NewMinerPubkey = NewMinerPubkey,
      };
    }
  }

  #endregion
}
#endregion


// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: merkle_tree_generator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Contracts.MerkleTreeGeneratorContract {

  /// <summary>Holder for reflection information generated from merkle_tree_generator.proto</summary>
  internal static partial class MerkleTreeGeneratorReflection {

    #region Descriptor
    /// <summary>File descriptor for merkle_tree_generator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MerkleTreeGeneratorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChttZXJrbGVfdHJlZV9nZW5lcmF0b3IucHJvdG8aD2FlbGYvY29yZS5wcm90",
            "bxoSYWVsZi9vcHRpb25zLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHku",
            "cHJvdG8aE3JlY2VpcHRfbWFrZXIucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93",
            "cmFwcGVycy5wcm90byIvCg9Jbml0aWFsaXplSW5wdXQSHAoFb3duZXIYASAB",
            "KAsyDS5hZWxmLkFkZHJlc3MiaQoZUmVnaXN0ZXJSZWNlaXB0TWFrZXJJbnB1",
            "dBIsChVyZWNlaXB0X21ha2VyX2FkZHJlc3MYASABKAsyDS5hZWxmLkFkZHJl",
            "c3MSHgoWbWVya2xlX3RyZWVfbGVhZl9saW1pdBgCIAEoBSJkChJHZXRNZXJr",
            "bGVUcmVlSW5wdXQSLAoVcmVjZWlwdF9tYWtlcl9hZGRyZXNzGAEgASgLMg0u",
            "YWVsZi5BZGRyZXNzEiAKGGV4cGVjdGVkX2Z1bGxfdHJlZV9pbmRleBgCIAEo",
            "AyJ6ChNHZXRNZXJrbGVUcmVlT3V0cHV0EiQKEG1lcmtsZV90cmVlX3Jvb3QY",
            "ASABKAsyCi5hZWxmLkhhc2gSEwoLZmlyc3RfaW5kZXgYAiABKAMSEgoKbGFz",
            "dF9pbmRleBgDIAEoAxIUCgxpc19mdWxsX3RyZWUYBCABKAgiXAoMUmVjZWlw",
            "dE1ha2VyEiwKFXJlY2VpcHRfbWFrZXJfYWRkcmVzcxgBIAEoCzINLmFlbGYu",
            "QWRkcmVzcxIeChZtZXJrbGVfdHJlZV9sZWFmX2xpbWl0GAIgASgFInsKCk1l",
            "cmtsZVRyZWUSJAoQbWVya2xlX3RyZWVfcm9vdBgBIAEoCzIKLmFlbGYuSGFz",
            "aBIYChBmaXJzdF9sZWFmX2luZGV4GAIgASgDEhcKD2xhc3RfbGVhZl9pbmRl",
            "eBgDIAEoAxIUCgxpc19mdWxsX3RyZWUYBCABKAgiZQoVR2V0UmVjZWlwdE1h",
            "a2VyT3V0cHV0EiwKFXJlY2VpcHRfbWFrZXJfYWRkcmVzcxgBIAEoCzINLmFl",
            "bGYuQWRkcmVzcxIeChZtZXJrbGVfdHJlZV9sZWFmX2xpbWl0GAIgASgFImcK",
            "EkdldE1lcmtsZVBhdGhJbnB1dBIkCg1yZWNlaXB0X21ha2VyGAEgASgLMg0u",
            "YWVsZi5BZGRyZXNzEhIKCnJlY2VpcHRfaWQYAiABKAMSFwoPbGFzdF9sZWFm",
            "X2luZGV4GAMgASgDIlMKFlJlY2VpcHRNYWtlclJlZ2lzdGVyZWQSMwoVcmVj",
            "ZWlwdF9tYWtlcl9hZGRyZXNzGAEgASgLMg0uYWVsZi5BZGRyZXNzQgWIj/UB",
            "AToEoLsYASJVChhSZWNlaXB0TWFrZXJVblJlZ2lzdGVyZWQSMwoVcmVjZWlw",
            "dF9tYWtlcl9hZGRyZXNzGAEgASgLMg0uYWVsZi5BZGRyZXNzQgWIj/UBAToE",
            "oLsYATLEBAobTWVya2xlVHJlZUdlbmVyYXRvckNvbnRyYWN0EjgKCkluaXRp",
            "YWxpemUSEC5Jbml0aWFsaXplSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkiABJMChRSZWdpc3RlclJlY2VpcHRNYWtlchIaLlJlZ2lzdGVyUmVjZWlw",
            "dE1ha2VySW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJBChZVblJl",
            "Z2lzdGVyUmVjZWlwdE1ha2VyEg0uYWVsZi5BZGRyZXNzGhYuZ29vZ2xlLnBy",
            "b3RvYnVmLkVtcHR5IgASRQoQR2V0RnVsbFRyZWVDb3VudBINLmFlbGYuQWRk",
            "cmVzcxobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWIifcBARJBCg1H",
            "ZXRNZXJrbGVUcmVlEhMuR2V0TWVya2xlVHJlZUlucHV0GhQuR2V0TWVya2xl",
            "VHJlZU91dHB1dCIFiIn3AQESPwoPR2V0UmVjZWlwdE1ha2VyEg0uYWVsZi5B",
            "ZGRyZXNzGhYuR2V0UmVjZWlwdE1ha2VyT3V0cHV0IgWIifcBARI9Cg1HZXRN",
            "ZXJrbGVQYXRoEhMuR2V0TWVya2xlUGF0aElucHV0GhAuYWVsZi5NZXJrbGVQ",
            "YXRoIgWIifcBARpQssz2AUtBRWxmLkNvbnRyYWN0cy5NZXJrbGVUcmVlR2Vu",
            "ZXJhdG9yQ29udHJhY3QuTWVya2xlVHJlZUdlbmVyYXRvckNvbnRyYWN0U3Rh",
            "dGVCLaoCKkFFbGYuQ29udHJhY3RzLk1lcmtsZVRyZWVHZW5lcmF0b3JDb250",
            "cmFjdGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::AElf.Contracts.ReceiptMakerContract.ReceiptMakerReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.MerkleTreeGeneratorContract.InitializeInput), global::AElf.Contracts.MerkleTreeGeneratorContract.InitializeInput.Parser, new[]{ "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.MerkleTreeGeneratorContract.RegisterReceiptMakerInput), global::AElf.Contracts.MerkleTreeGeneratorContract.RegisterReceiptMakerInput.Parser, new[]{ "ReceiptMakerAddress", "MerkleTreeLeafLimit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.MerkleTreeGeneratorContract.GetMerkleTreeInput), global::AElf.Contracts.MerkleTreeGeneratorContract.GetMerkleTreeInput.Parser, new[]{ "ReceiptMakerAddress", "ExpectedFullTreeIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.MerkleTreeGeneratorContract.GetMerkleTreeOutput), global::AElf.Contracts.MerkleTreeGeneratorContract.GetMerkleTreeOutput.Parser, new[]{ "MerkleTreeRoot", "FirstIndex", "LastIndex", "IsFullTree" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.MerkleTreeGeneratorContract.ReceiptMaker), global::AElf.Contracts.MerkleTreeGeneratorContract.ReceiptMaker.Parser, new[]{ "ReceiptMakerAddress", "MerkleTreeLeafLimit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.MerkleTreeGeneratorContract.MerkleTree), global::AElf.Contracts.MerkleTreeGeneratorContract.MerkleTree.Parser, new[]{ "MerkleTreeRoot", "FirstLeafIndex", "LastLeafIndex", "IsFullTree" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.MerkleTreeGeneratorContract.GetReceiptMakerOutput), global::AElf.Contracts.MerkleTreeGeneratorContract.GetReceiptMakerOutput.Parser, new[]{ "ReceiptMakerAddress", "MerkleTreeLeafLimit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.MerkleTreeGeneratorContract.GetMerklePathInput), global::AElf.Contracts.MerkleTreeGeneratorContract.GetMerklePathInput.Parser, new[]{ "ReceiptMaker", "ReceiptId", "LastLeafIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.MerkleTreeGeneratorContract.ReceiptMakerRegistered), global::AElf.Contracts.MerkleTreeGeneratorContract.ReceiptMakerRegistered.Parser, new[]{ "ReceiptMakerAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.MerkleTreeGeneratorContract.ReceiptMakerUnRegistered), global::AElf.Contracts.MerkleTreeGeneratorContract.ReceiptMakerUnRegistered.Parser, new[]{ "ReceiptMakerAddress" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class InitializeInput : pb::IMessage<InitializeInput> {
    private static readonly pb::MessageParser<InitializeInput> _parser = new pb::MessageParser<InitializeInput>(() => new InitializeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitializeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.MerkleTreeGeneratorContract.MerkleTreeGeneratorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput(InitializeInput other) : this() {
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput Clone() {
      return new InitializeInput(this);
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private global::AElf.Types.Address owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitializeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitializeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Owner, other.Owner)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (owner_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitializeInput other) {
      if (other == null) {
        return;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::AElf.Types.Address();
        }
        Owner.MergeFrom(other.Owner);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class RegisterReceiptMakerInput : pb::IMessage<RegisterReceiptMakerInput> {
    private static readonly pb::MessageParser<RegisterReceiptMakerInput> _parser = new pb::MessageParser<RegisterReceiptMakerInput>(() => new RegisterReceiptMakerInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterReceiptMakerInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.MerkleTreeGeneratorContract.MerkleTreeGeneratorReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterReceiptMakerInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterReceiptMakerInput(RegisterReceiptMakerInput other) : this() {
      receiptMakerAddress_ = other.receiptMakerAddress_ != null ? other.receiptMakerAddress_.Clone() : null;
      merkleTreeLeafLimit_ = other.merkleTreeLeafLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterReceiptMakerInput Clone() {
      return new RegisterReceiptMakerInput(this);
    }

    /// <summary>Field number for the "receipt_maker_address" field.</summary>
    public const int ReceiptMakerAddressFieldNumber = 1;
    private global::AElf.Types.Address receiptMakerAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ReceiptMakerAddress {
      get { return receiptMakerAddress_; }
      set {
        receiptMakerAddress_ = value;
      }
    }

    /// <summary>Field number for the "merkle_tree_leaf_limit" field.</summary>
    public const int MerkleTreeLeafLimitFieldNumber = 2;
    private int merkleTreeLeafLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MerkleTreeLeafLimit {
      get { return merkleTreeLeafLimit_; }
      set {
        merkleTreeLeafLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterReceiptMakerInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterReceiptMakerInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReceiptMakerAddress, other.ReceiptMakerAddress)) return false;
      if (MerkleTreeLeafLimit != other.MerkleTreeLeafLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (receiptMakerAddress_ != null) hash ^= ReceiptMakerAddress.GetHashCode();
      if (MerkleTreeLeafLimit != 0) hash ^= MerkleTreeLeafLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (receiptMakerAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReceiptMakerAddress);
      }
      if (MerkleTreeLeafLimit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MerkleTreeLeafLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (receiptMakerAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceiptMakerAddress);
      }
      if (MerkleTreeLeafLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MerkleTreeLeafLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterReceiptMakerInput other) {
      if (other == null) {
        return;
      }
      if (other.receiptMakerAddress_ != null) {
        if (receiptMakerAddress_ == null) {
          ReceiptMakerAddress = new global::AElf.Types.Address();
        }
        ReceiptMakerAddress.MergeFrom(other.ReceiptMakerAddress);
      }
      if (other.MerkleTreeLeafLimit != 0) {
        MerkleTreeLeafLimit = other.MerkleTreeLeafLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (receiptMakerAddress_ == null) {
              ReceiptMakerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ReceiptMakerAddress);
            break;
          }
          case 16: {
            MerkleTreeLeafLimit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetMerkleTreeInput : pb::IMessage<GetMerkleTreeInput> {
    private static readonly pb::MessageParser<GetMerkleTreeInput> _parser = new pb::MessageParser<GetMerkleTreeInput>(() => new GetMerkleTreeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMerkleTreeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.MerkleTreeGeneratorContract.MerkleTreeGeneratorReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerkleTreeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerkleTreeInput(GetMerkleTreeInput other) : this() {
      receiptMakerAddress_ = other.receiptMakerAddress_ != null ? other.receiptMakerAddress_.Clone() : null;
      expectedFullTreeIndex_ = other.expectedFullTreeIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerkleTreeInput Clone() {
      return new GetMerkleTreeInput(this);
    }

    /// <summary>Field number for the "receipt_maker_address" field.</summary>
    public const int ReceiptMakerAddressFieldNumber = 1;
    private global::AElf.Types.Address receiptMakerAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ReceiptMakerAddress {
      get { return receiptMakerAddress_; }
      set {
        receiptMakerAddress_ = value;
      }
    }

    /// <summary>Field number for the "expected_full_tree_index" field.</summary>
    public const int ExpectedFullTreeIndexFieldNumber = 2;
    private long expectedFullTreeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExpectedFullTreeIndex {
      get { return expectedFullTreeIndex_; }
      set {
        expectedFullTreeIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMerkleTreeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMerkleTreeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReceiptMakerAddress, other.ReceiptMakerAddress)) return false;
      if (ExpectedFullTreeIndex != other.ExpectedFullTreeIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (receiptMakerAddress_ != null) hash ^= ReceiptMakerAddress.GetHashCode();
      if (ExpectedFullTreeIndex != 0L) hash ^= ExpectedFullTreeIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (receiptMakerAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReceiptMakerAddress);
      }
      if (ExpectedFullTreeIndex != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ExpectedFullTreeIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (receiptMakerAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceiptMakerAddress);
      }
      if (ExpectedFullTreeIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpectedFullTreeIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMerkleTreeInput other) {
      if (other == null) {
        return;
      }
      if (other.receiptMakerAddress_ != null) {
        if (receiptMakerAddress_ == null) {
          ReceiptMakerAddress = new global::AElf.Types.Address();
        }
        ReceiptMakerAddress.MergeFrom(other.ReceiptMakerAddress);
      }
      if (other.ExpectedFullTreeIndex != 0L) {
        ExpectedFullTreeIndex = other.ExpectedFullTreeIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (receiptMakerAddress_ == null) {
              ReceiptMakerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ReceiptMakerAddress);
            break;
          }
          case 16: {
            ExpectedFullTreeIndex = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetMerkleTreeOutput : pb::IMessage<GetMerkleTreeOutput> {
    private static readonly pb::MessageParser<GetMerkleTreeOutput> _parser = new pb::MessageParser<GetMerkleTreeOutput>(() => new GetMerkleTreeOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMerkleTreeOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.MerkleTreeGeneratorContract.MerkleTreeGeneratorReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerkleTreeOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerkleTreeOutput(GetMerkleTreeOutput other) : this() {
      merkleTreeRoot_ = other.merkleTreeRoot_ != null ? other.merkleTreeRoot_.Clone() : null;
      firstIndex_ = other.firstIndex_;
      lastIndex_ = other.lastIndex_;
      isFullTree_ = other.isFullTree_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerkleTreeOutput Clone() {
      return new GetMerkleTreeOutput(this);
    }

    /// <summary>Field number for the "merkle_tree_root" field.</summary>
    public const int MerkleTreeRootFieldNumber = 1;
    private global::AElf.Types.Hash merkleTreeRoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash MerkleTreeRoot {
      get { return merkleTreeRoot_; }
      set {
        merkleTreeRoot_ = value;
      }
    }

    /// <summary>Field number for the "first_index" field.</summary>
    public const int FirstIndexFieldNumber = 2;
    private long firstIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FirstIndex {
      get { return firstIndex_; }
      set {
        firstIndex_ = value;
      }
    }

    /// <summary>Field number for the "last_index" field.</summary>
    public const int LastIndexFieldNumber = 3;
    private long lastIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastIndex {
      get { return lastIndex_; }
      set {
        lastIndex_ = value;
      }
    }

    /// <summary>Field number for the "is_full_tree" field.</summary>
    public const int IsFullTreeFieldNumber = 4;
    private bool isFullTree_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFullTree {
      get { return isFullTree_; }
      set {
        isFullTree_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMerkleTreeOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMerkleTreeOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MerkleTreeRoot, other.MerkleTreeRoot)) return false;
      if (FirstIndex != other.FirstIndex) return false;
      if (LastIndex != other.LastIndex) return false;
      if (IsFullTree != other.IsFullTree) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (merkleTreeRoot_ != null) hash ^= MerkleTreeRoot.GetHashCode();
      if (FirstIndex != 0L) hash ^= FirstIndex.GetHashCode();
      if (LastIndex != 0L) hash ^= LastIndex.GetHashCode();
      if (IsFullTree != false) hash ^= IsFullTree.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (merkleTreeRoot_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MerkleTreeRoot);
      }
      if (FirstIndex != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FirstIndex);
      }
      if (LastIndex != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LastIndex);
      }
      if (IsFullTree != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsFullTree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (merkleTreeRoot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MerkleTreeRoot);
      }
      if (FirstIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FirstIndex);
      }
      if (LastIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastIndex);
      }
      if (IsFullTree != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMerkleTreeOutput other) {
      if (other == null) {
        return;
      }
      if (other.merkleTreeRoot_ != null) {
        if (merkleTreeRoot_ == null) {
          MerkleTreeRoot = new global::AElf.Types.Hash();
        }
        MerkleTreeRoot.MergeFrom(other.MerkleTreeRoot);
      }
      if (other.FirstIndex != 0L) {
        FirstIndex = other.FirstIndex;
      }
      if (other.LastIndex != 0L) {
        LastIndex = other.LastIndex;
      }
      if (other.IsFullTree != false) {
        IsFullTree = other.IsFullTree;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (merkleTreeRoot_ == null) {
              MerkleTreeRoot = new global::AElf.Types.Hash();
            }
            input.ReadMessage(MerkleTreeRoot);
            break;
          }
          case 16: {
            FirstIndex = input.ReadInt64();
            break;
          }
          case 24: {
            LastIndex = input.ReadInt64();
            break;
          }
          case 32: {
            IsFullTree = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ReceiptMaker : pb::IMessage<ReceiptMaker> {
    private static readonly pb::MessageParser<ReceiptMaker> _parser = new pb::MessageParser<ReceiptMaker>(() => new ReceiptMaker());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiptMaker> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.MerkleTreeGeneratorContract.MerkleTreeGeneratorReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiptMaker() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiptMaker(ReceiptMaker other) : this() {
      receiptMakerAddress_ = other.receiptMakerAddress_ != null ? other.receiptMakerAddress_.Clone() : null;
      merkleTreeLeafLimit_ = other.merkleTreeLeafLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiptMaker Clone() {
      return new ReceiptMaker(this);
    }

    /// <summary>Field number for the "receipt_maker_address" field.</summary>
    public const int ReceiptMakerAddressFieldNumber = 1;
    private global::AElf.Types.Address receiptMakerAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ReceiptMakerAddress {
      get { return receiptMakerAddress_; }
      set {
        receiptMakerAddress_ = value;
      }
    }

    /// <summary>Field number for the "merkle_tree_leaf_limit" field.</summary>
    public const int MerkleTreeLeafLimitFieldNumber = 2;
    private int merkleTreeLeafLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MerkleTreeLeafLimit {
      get { return merkleTreeLeafLimit_; }
      set {
        merkleTreeLeafLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiptMaker);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiptMaker other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReceiptMakerAddress, other.ReceiptMakerAddress)) return false;
      if (MerkleTreeLeafLimit != other.MerkleTreeLeafLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (receiptMakerAddress_ != null) hash ^= ReceiptMakerAddress.GetHashCode();
      if (MerkleTreeLeafLimit != 0) hash ^= MerkleTreeLeafLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (receiptMakerAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReceiptMakerAddress);
      }
      if (MerkleTreeLeafLimit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MerkleTreeLeafLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (receiptMakerAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceiptMakerAddress);
      }
      if (MerkleTreeLeafLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MerkleTreeLeafLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiptMaker other) {
      if (other == null) {
        return;
      }
      if (other.receiptMakerAddress_ != null) {
        if (receiptMakerAddress_ == null) {
          ReceiptMakerAddress = new global::AElf.Types.Address();
        }
        ReceiptMakerAddress.MergeFrom(other.ReceiptMakerAddress);
      }
      if (other.MerkleTreeLeafLimit != 0) {
        MerkleTreeLeafLimit = other.MerkleTreeLeafLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (receiptMakerAddress_ == null) {
              ReceiptMakerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ReceiptMakerAddress);
            break;
          }
          case 16: {
            MerkleTreeLeafLimit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class MerkleTree : pb::IMessage<MerkleTree> {
    private static readonly pb::MessageParser<MerkleTree> _parser = new pb::MessageParser<MerkleTree>(() => new MerkleTree());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MerkleTree> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.MerkleTreeGeneratorContract.MerkleTreeGeneratorReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerkleTree() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerkleTree(MerkleTree other) : this() {
      merkleTreeRoot_ = other.merkleTreeRoot_ != null ? other.merkleTreeRoot_.Clone() : null;
      firstLeafIndex_ = other.firstLeafIndex_;
      lastLeafIndex_ = other.lastLeafIndex_;
      isFullTree_ = other.isFullTree_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerkleTree Clone() {
      return new MerkleTree(this);
    }

    /// <summary>Field number for the "merkle_tree_root" field.</summary>
    public const int MerkleTreeRootFieldNumber = 1;
    private global::AElf.Types.Hash merkleTreeRoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash MerkleTreeRoot {
      get { return merkleTreeRoot_; }
      set {
        merkleTreeRoot_ = value;
      }
    }

    /// <summary>Field number for the "first_leaf_index" field.</summary>
    public const int FirstLeafIndexFieldNumber = 2;
    private long firstLeafIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FirstLeafIndex {
      get { return firstLeafIndex_; }
      set {
        firstLeafIndex_ = value;
      }
    }

    /// <summary>Field number for the "last_leaf_index" field.</summary>
    public const int LastLeafIndexFieldNumber = 3;
    private long lastLeafIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastLeafIndex {
      get { return lastLeafIndex_; }
      set {
        lastLeafIndex_ = value;
      }
    }

    /// <summary>Field number for the "is_full_tree" field.</summary>
    public const int IsFullTreeFieldNumber = 4;
    private bool isFullTree_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFullTree {
      get { return isFullTree_; }
      set {
        isFullTree_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MerkleTree);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MerkleTree other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MerkleTreeRoot, other.MerkleTreeRoot)) return false;
      if (FirstLeafIndex != other.FirstLeafIndex) return false;
      if (LastLeafIndex != other.LastLeafIndex) return false;
      if (IsFullTree != other.IsFullTree) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (merkleTreeRoot_ != null) hash ^= MerkleTreeRoot.GetHashCode();
      if (FirstLeafIndex != 0L) hash ^= FirstLeafIndex.GetHashCode();
      if (LastLeafIndex != 0L) hash ^= LastLeafIndex.GetHashCode();
      if (IsFullTree != false) hash ^= IsFullTree.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (merkleTreeRoot_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MerkleTreeRoot);
      }
      if (FirstLeafIndex != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FirstLeafIndex);
      }
      if (LastLeafIndex != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LastLeafIndex);
      }
      if (IsFullTree != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsFullTree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (merkleTreeRoot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MerkleTreeRoot);
      }
      if (FirstLeafIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FirstLeafIndex);
      }
      if (LastLeafIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastLeafIndex);
      }
      if (IsFullTree != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MerkleTree other) {
      if (other == null) {
        return;
      }
      if (other.merkleTreeRoot_ != null) {
        if (merkleTreeRoot_ == null) {
          MerkleTreeRoot = new global::AElf.Types.Hash();
        }
        MerkleTreeRoot.MergeFrom(other.MerkleTreeRoot);
      }
      if (other.FirstLeafIndex != 0L) {
        FirstLeafIndex = other.FirstLeafIndex;
      }
      if (other.LastLeafIndex != 0L) {
        LastLeafIndex = other.LastLeafIndex;
      }
      if (other.IsFullTree != false) {
        IsFullTree = other.IsFullTree;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (merkleTreeRoot_ == null) {
              MerkleTreeRoot = new global::AElf.Types.Hash();
            }
            input.ReadMessage(MerkleTreeRoot);
            break;
          }
          case 16: {
            FirstLeafIndex = input.ReadInt64();
            break;
          }
          case 24: {
            LastLeafIndex = input.ReadInt64();
            break;
          }
          case 32: {
            IsFullTree = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetReceiptMakerOutput : pb::IMessage<GetReceiptMakerOutput> {
    private static readonly pb::MessageParser<GetReceiptMakerOutput> _parser = new pb::MessageParser<GetReceiptMakerOutput>(() => new GetReceiptMakerOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetReceiptMakerOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.MerkleTreeGeneratorContract.MerkleTreeGeneratorReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReceiptMakerOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReceiptMakerOutput(GetReceiptMakerOutput other) : this() {
      receiptMakerAddress_ = other.receiptMakerAddress_ != null ? other.receiptMakerAddress_.Clone() : null;
      merkleTreeLeafLimit_ = other.merkleTreeLeafLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReceiptMakerOutput Clone() {
      return new GetReceiptMakerOutput(this);
    }

    /// <summary>Field number for the "receipt_maker_address" field.</summary>
    public const int ReceiptMakerAddressFieldNumber = 1;
    private global::AElf.Types.Address receiptMakerAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ReceiptMakerAddress {
      get { return receiptMakerAddress_; }
      set {
        receiptMakerAddress_ = value;
      }
    }

    /// <summary>Field number for the "merkle_tree_leaf_limit" field.</summary>
    public const int MerkleTreeLeafLimitFieldNumber = 2;
    private int merkleTreeLeafLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MerkleTreeLeafLimit {
      get { return merkleTreeLeafLimit_; }
      set {
        merkleTreeLeafLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetReceiptMakerOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetReceiptMakerOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReceiptMakerAddress, other.ReceiptMakerAddress)) return false;
      if (MerkleTreeLeafLimit != other.MerkleTreeLeafLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (receiptMakerAddress_ != null) hash ^= ReceiptMakerAddress.GetHashCode();
      if (MerkleTreeLeafLimit != 0) hash ^= MerkleTreeLeafLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (receiptMakerAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReceiptMakerAddress);
      }
      if (MerkleTreeLeafLimit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MerkleTreeLeafLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (receiptMakerAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceiptMakerAddress);
      }
      if (MerkleTreeLeafLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MerkleTreeLeafLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetReceiptMakerOutput other) {
      if (other == null) {
        return;
      }
      if (other.receiptMakerAddress_ != null) {
        if (receiptMakerAddress_ == null) {
          ReceiptMakerAddress = new global::AElf.Types.Address();
        }
        ReceiptMakerAddress.MergeFrom(other.ReceiptMakerAddress);
      }
      if (other.MerkleTreeLeafLimit != 0) {
        MerkleTreeLeafLimit = other.MerkleTreeLeafLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (receiptMakerAddress_ == null) {
              ReceiptMakerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ReceiptMakerAddress);
            break;
          }
          case 16: {
            MerkleTreeLeafLimit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetMerklePathInput : pb::IMessage<GetMerklePathInput> {
    private static readonly pb::MessageParser<GetMerklePathInput> _parser = new pb::MessageParser<GetMerklePathInput>(() => new GetMerklePathInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMerklePathInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.MerkleTreeGeneratorContract.MerkleTreeGeneratorReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerklePathInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerklePathInput(GetMerklePathInput other) : this() {
      receiptMaker_ = other.receiptMaker_ != null ? other.receiptMaker_.Clone() : null;
      receiptId_ = other.receiptId_;
      lastLeafIndex_ = other.lastLeafIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerklePathInput Clone() {
      return new GetMerklePathInput(this);
    }

    /// <summary>Field number for the "receipt_maker" field.</summary>
    public const int ReceiptMakerFieldNumber = 1;
    private global::AElf.Types.Address receiptMaker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ReceiptMaker {
      get { return receiptMaker_; }
      set {
        receiptMaker_ = value;
      }
    }

    /// <summary>Field number for the "receipt_id" field.</summary>
    public const int ReceiptIdFieldNumber = 2;
    private long receiptId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReceiptId {
      get { return receiptId_; }
      set {
        receiptId_ = value;
      }
    }

    /// <summary>Field number for the "last_leaf_index" field.</summary>
    public const int LastLeafIndexFieldNumber = 3;
    private long lastLeafIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastLeafIndex {
      get { return lastLeafIndex_; }
      set {
        lastLeafIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMerklePathInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMerklePathInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReceiptMaker, other.ReceiptMaker)) return false;
      if (ReceiptId != other.ReceiptId) return false;
      if (LastLeafIndex != other.LastLeafIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (receiptMaker_ != null) hash ^= ReceiptMaker.GetHashCode();
      if (ReceiptId != 0L) hash ^= ReceiptId.GetHashCode();
      if (LastLeafIndex != 0L) hash ^= LastLeafIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (receiptMaker_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReceiptMaker);
      }
      if (ReceiptId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ReceiptId);
      }
      if (LastLeafIndex != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LastLeafIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (receiptMaker_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceiptMaker);
      }
      if (ReceiptId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReceiptId);
      }
      if (LastLeafIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastLeafIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMerklePathInput other) {
      if (other == null) {
        return;
      }
      if (other.receiptMaker_ != null) {
        if (receiptMaker_ == null) {
          ReceiptMaker = new global::AElf.Types.Address();
        }
        ReceiptMaker.MergeFrom(other.ReceiptMaker);
      }
      if (other.ReceiptId != 0L) {
        ReceiptId = other.ReceiptId;
      }
      if (other.LastLeafIndex != 0L) {
        LastLeafIndex = other.LastLeafIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (receiptMaker_ == null) {
              ReceiptMaker = new global::AElf.Types.Address();
            }
            input.ReadMessage(ReceiptMaker);
            break;
          }
          case 16: {
            ReceiptId = input.ReadInt64();
            break;
          }
          case 24: {
            LastLeafIndex = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ReceiptMakerRegistered : pb::IMessage<ReceiptMakerRegistered> {
    private static readonly pb::MessageParser<ReceiptMakerRegistered> _parser = new pb::MessageParser<ReceiptMakerRegistered>(() => new ReceiptMakerRegistered());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiptMakerRegistered> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.MerkleTreeGeneratorContract.MerkleTreeGeneratorReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiptMakerRegistered() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiptMakerRegistered(ReceiptMakerRegistered other) : this() {
      receiptMakerAddress_ = other.receiptMakerAddress_ != null ? other.receiptMakerAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiptMakerRegistered Clone() {
      return new ReceiptMakerRegistered(this);
    }

    /// <summary>Field number for the "receipt_maker_address" field.</summary>
    public const int ReceiptMakerAddressFieldNumber = 1;
    private global::AElf.Types.Address receiptMakerAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ReceiptMakerAddress {
      get { return receiptMakerAddress_; }
      set {
        receiptMakerAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiptMakerRegistered);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiptMakerRegistered other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReceiptMakerAddress, other.ReceiptMakerAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (receiptMakerAddress_ != null) hash ^= ReceiptMakerAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (receiptMakerAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReceiptMakerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (receiptMakerAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceiptMakerAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiptMakerRegistered other) {
      if (other == null) {
        return;
      }
      if (other.receiptMakerAddress_ != null) {
        if (receiptMakerAddress_ == null) {
          ReceiptMakerAddress = new global::AElf.Types.Address();
        }
        ReceiptMakerAddress.MergeFrom(other.ReceiptMakerAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (receiptMakerAddress_ == null) {
              ReceiptMakerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ReceiptMakerAddress);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ReceiptMakerUnRegistered : pb::IMessage<ReceiptMakerUnRegistered> {
    private static readonly pb::MessageParser<ReceiptMakerUnRegistered> _parser = new pb::MessageParser<ReceiptMakerUnRegistered>(() => new ReceiptMakerUnRegistered());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiptMakerUnRegistered> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.MerkleTreeGeneratorContract.MerkleTreeGeneratorReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiptMakerUnRegistered() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiptMakerUnRegistered(ReceiptMakerUnRegistered other) : this() {
      receiptMakerAddress_ = other.receiptMakerAddress_ != null ? other.receiptMakerAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiptMakerUnRegistered Clone() {
      return new ReceiptMakerUnRegistered(this);
    }

    /// <summary>Field number for the "receipt_maker_address" field.</summary>
    public const int ReceiptMakerAddressFieldNumber = 1;
    private global::AElf.Types.Address receiptMakerAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address ReceiptMakerAddress {
      get { return receiptMakerAddress_; }
      set {
        receiptMakerAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiptMakerUnRegistered);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiptMakerUnRegistered other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReceiptMakerAddress, other.ReceiptMakerAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (receiptMakerAddress_ != null) hash ^= ReceiptMakerAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (receiptMakerAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReceiptMakerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (receiptMakerAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceiptMakerAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiptMakerUnRegistered other) {
      if (other == null) {
        return;
      }
      if (other.receiptMakerAddress_ != null) {
        if (receiptMakerAddress_ == null) {
          ReceiptMakerAddress = new global::AElf.Types.Address();
        }
        ReceiptMakerAddress.MergeFrom(other.ReceiptMakerAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (receiptMakerAddress_ == null) {
              ReceiptMakerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ReceiptMakerAddress);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

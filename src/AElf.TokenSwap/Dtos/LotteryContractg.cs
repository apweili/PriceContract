// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: lottery_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Contracts.Lottery {

  /// <summary>Holder for reflection information generated from lottery_contract.proto</summary>
  public static partial class LotteryContractReflection {

    #region Descriptor
    /// <summary>File descriptor for lottery_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LotteryContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZsb3R0ZXJ5X2NvbnRyYWN0LnByb3RvGg9hZWxmL2NvcmUucHJvdG8aEmFl",
            "bGYvb3B0aW9ucy5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3Rv",
            "Gh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8aH2dvb2dsZS9wcm90",
            "b2J1Zi90aW1lc3RhbXAucHJvdG8i0wIKD0luaXRpYWxpemVJbnB1dBIzCg9z",
            "dGFydF90aW1lc3RhbXAYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wEjYKEnNodXRkb3duX3RpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXASNAoQcmVkZWVtX3RpbWVzdGFtcBgDIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASOQoVc3RvcF9yZWRlZW1fdGltZXN0",
            "YW1wGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIaChJkZWZh",
            "dWx0X2F3YXJkX2xpc3QYBSADKAMSHAoFYWRtaW4YBiABKAsyDS5hZWxmLkFk",
            "ZHJlc3MSEAoIaXNfZGVidWcYByABKAgSFgoGdHhfZmVlGAggASgLMgYuVHhG",
            "ZWUilAEKCk93bkxvdHRlcnkSGQoRbG90dGVyeV9jb2RlX2xpc3QYASADKAMS",
            "HAoUdG90YWxfc3Rha2luZ19hbW91bnQYAiABKAMSGgoSdG90YWxfYXdhcmRf",
            "YW1vdW50GAMgASgDEhwKFGNsYWltZWRfYXdhcmRfYW1vdW50GAQgASgDEhMK",
            "C2lzX3JlZGVlbWVkGAUgASgIIs4BCgdMb3R0ZXJ5EhQKDGxvdHRlcnlfY29k",
            "ZRgBIAEoAxIzCg9pc3N1ZV90aW1lc3RhbXAYAiABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEhUKDWF3YXJkX2lkX2xpc3QYAyADKAMSHAoFb3du",
            "ZXIYBCABKAsyDS5hZWxmLkFkZHJlc3MSHwoXbGF0ZXN0X2NsYWltZWRfYXdh",
            "cmRfaWQYBSABKAMSIgoabG90dGVyeV90b3RhbF9hd2FyZF9hbW91bnQYBiAB",
            "KAMiGgoJSW50NjRMaXN0Eg0KBXZhbHVlGAEgAygDIocBCgVBd2FyZBIQCghh",
            "d2FyZF9pZBgBIAEoAxIUCgxhd2FyZF9hbW91bnQYAiABKAMSFAoMbG90dGVy",
            "eV9jb2RlGAMgASgDEhIKCmlzX2NsYWltZWQYBCABKAgSHAoFb3duZXIYBSAB",
            "KAsyDS5hZWxmLkFkZHJlc3MSDgoGcGVyaW9kGAYgASgFIiIKCUF3YXJkTGlz",
            "dBIVCgV2YWx1ZRgBIAMoCzIGLkF3YXJkIvUBCgtQZXJpb2RBd2FyZBIRCglw",
            "ZXJpb2RfaWQYASABKAUSMwoPc3RhcnRfdGltZXN0YW1wGAIgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBIxCg1lbmRfdGltZXN0YW1wGAMgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBImChJ1c2VkX3JhbmRvbV9o",
            "YXNoZXMYBCADKAsyCi5hZWxmLkhhc2gSFgoOc3RhcnRfYXdhcmRfaWQYBSAB",
            "KAMSFAoMZW5kX2F3YXJkX2lkGAYgASgDEhUKDWRyZXdfYXdhcmRfaWQYByAB",
            "KAMiTAoJRHJhd0lucHV0EhEKCXBlcmlvZF9pZBgBIAEoBRIXCg9uZXh0X2F3",
            "YXJkX2xpc3QYAiADKAMSEwoLdG9fYXdhcmRfaWQYAyABKAMiSgoRR2V0QXdh",
            "cmRMaXN0SW5wdXQSEQoJcGVyaW9kX2lkGAEgASgFEhMKC3N0YXJ0X2luZGV4",
            "GAIgASgDEg0KBWNvdW50GAMgASgFImkKDkF3YXJkQW1vdW50TWFwEikKBXZh",
            "bHVlGAEgAygLMhouQXdhcmRBbW91bnRNYXAuVmFsdWVFbnRyeRosCgpWYWx1",
            "ZUVudHJ5EgsKA2tleRgBIAEoAxINCgV2YWx1ZRgCIAEoAzoCOAEiSgoFVHhG",
            "ZWUSFAoMc3Rha2VfdHhfZmVlGAEgASgDEhUKDXJlZGVlbV90eF9mZWUYAiAB",
            "KAMSFAoMY2xhaW1fdHhfZmVlGAMgASgDIicKDERyZXdGaW5pc2hlZBIRCglw",
            "ZXJpb2RfaWQYASABKAM6BKC7GAEiPgoORHJld1VuZmluaXNoZWQSEQoJcGVy",
            "aW9kX2lkGAEgASgDEhMKC3RvX2F3YXJkX2lkGAIgASgDOgSguxgBImIKBlN0",
            "YWtlZBIbCgR1c2VyGAEgASgLMg0uYWVsZi5BZGRyZXNzEg4KBmFtb3VudBgC",
            "IAEoAxIlChFsb3R0ZXJ5X2NvZGVfbGlzdBgDIAEoCzIKLkludDY0TGlzdDoE",
            "oLsYASJQCghSZWRlZW1lZBIbCgR1c2VyGAEgASgLMg0uYWVsZi5BZGRyZXNz",
            "Eg4KBmFtb3VudBgCIAEoAxIRCglwZXJpb2RfaWQYAyABKAM6BKC7GAEifgoH",
            "Q2xhaW1lZBIbCgR1c2VyGAEgASgLMg0uYWVsZi5BZGRyZXNzEg4KBmFtb3Vu",
            "dBgCIAEoAxIRCglwZXJpb2RfaWQYAyABKAMSLQoZY2xhaW1lZF9sb3R0ZXJ5",
            "X2NvZGVfbGlzdBgEIAEoCzIKLkludDY0TGlzdDoEoLsYASI9ChVUcmFuc2Fj",
            "dGlvbkZlZUNoYXJnZWQSDgoGc3ltYm9sGAEgASgJEg4KBmFtb3VudBgCIAEo",
            "AzoEoLsYATLeDgoPTG90dGVyeUNvbnRyYWN0EjgKCkluaXRpYWxpemUSEC5J",
            "bml0aWFsaXplSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABIsCgRE",
            "cmF3EgouRHJhd0lucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASPAoO",
            "UmVzZXRUaW1lc3RhbXASEC5Jbml0aWFsaXplSW5wdXQaFi5nb29nbGUucHJv",
            "dG9idWYuRW1wdHkiABIuCgpSZXNldFR4RmVlEgYuVHhGZWUaFi5nb29nbGUu",
            "cHJvdG9idWYuRW1wdHkiABI1CgpSZXNldEFkbWluEg0uYWVsZi5BZGRyZXNz",
            "GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASQQoIV2l0aGRyYXcSGy5nb29n",
            "bGUucHJvdG9idWYuSW50NjRWYWx1ZRoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0",
            "eSIAEjMKBVN0YWtlEhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUaCy5P",
            "d25Mb3R0ZXJ5IgASOgoGUmVkZWVtEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5",
            "GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASOQoFQ2xhaW0SFi5nb29nbGUu",
            "cHJvdG9idWYuRW1wdHkaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJQChJH",
            "ZXRDdXJyZW50UGVyaW9kSWQSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaGy5n",
            "b29nbGUucHJvdG9idWYuSW50MzJWYWx1ZSIFiIn3AQESUgoUR2V0VG90YWxM",
            "b3R0ZXJ5Q291bnQSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaGy5nb29nbGUu",
            "cHJvdG9idWYuSW50NjRWYWx1ZSIFiIn3AQESUAoSR2V0VG90YWxBd2FyZENv",
            "dW50EhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDY0VmFsdWUiBYiJ9wEBEkMKH0dldExvdHRlcnlDb2RlTGlzdEJ5VXNl",
            "ckFkZHJlc3MSDS5hZWxmLkFkZHJlc3MaCi5JbnQ2NExpc3QiBYiJ9wEBEj0K",
            "GUdldEF3YXJkTGlzdEJ5VXNlckFkZHJlc3MSDS5hZWxmLkFkZHJlc3MaCi5B",
            "d2FyZExpc3QiBYiJ9wEBEjUKDEdldEF3YXJkTGlzdBISLkdldEF3YXJkTGlz",
            "dElucHV0GgouQXdhcmRMaXN0IgWIifcBARI6CgpHZXRMb3R0ZXJ5EhsuZ29v",
            "Z2xlLnByb3RvYnVmLkludDY0VmFsdWUaCC5Mb3R0ZXJ5IgWIifcBARJFChBH",
            "ZXRTdGFraW5nQW1vdW50Eg0uYWVsZi5BZGRyZXNzGhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDY0VmFsdWUiBYiJ9wEBEjIKDUdldE93bkxvdHRlcnkSDS5hZWxm",
            "LkFkZHJlc3MaCy5Pd25Mb3R0ZXJ5IgWIifcBARI2CghHZXRBd2FyZBIbLmdv",
            "b2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlGgYuQXdhcmQiBYiJ9wEBEkIKDkdl",
            "dFBlcmlvZEF3YXJkEhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUaDC5Q",
            "ZXJpb2RBd2FyZCIFiIn3AQESRQoWR2V0UHJldmlvdXNQZXJpb2RBd2FyZBIW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoMLlBlcmlvZEF3YXJkIgWIifcBARJO",
            "ChFHZXRTdGFydFRpbWVzdGFtcBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiBYiJ9wEBElEKFEdldFNodXRk",
            "b3duVGltZXN0YW1wEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcCIFiIn3AQESTwoSR2V0UmVkZWVtVGltZXN0",
            "YW1wEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcCIFiIn3AQESUwoWR2V0U3RvcFJlZGVlbVRpbWVzdGFtcBIW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXAiBYiJ9wEBEjoKEUdldEF3YXJkQW1vdW50TWFwEg0uYWVsZi5BZGRy",
            "ZXNzGg8uQXdhcmRBbW91bnRNYXAiBYiJ9wEBEjEKCEdldFR4RmVlEhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5GgYuVHhGZWUiBYiJ9wEBEjgKCEdldEFkbWlu",
            "EhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Gg0uYWVsZi5BZGRyZXNzIgWIifcB",
            "ARowssz2AStBRWxmLkNvbnRyYWN0cy5Mb3R0ZXJ5LkxvdHRlcnlDb250cmFj",
            "dFN0YXRlQhmqAhZBRWxmLkNvbnRyYWN0cy5Mb3R0ZXJ5YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.InitializeInput), global::AElf.Contracts.Lottery.InitializeInput.Parser, new[]{ "StartTimestamp", "ShutdownTimestamp", "RedeemTimestamp", "StopRedeemTimestamp", "DefaultAwardList", "Admin", "IsDebug", "TxFee" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.OwnLottery), global::AElf.Contracts.Lottery.OwnLottery.Parser, new[]{ "LotteryCodeList", "TotalStakingAmount", "TotalAwardAmount", "ClaimedAwardAmount", "IsRedeemed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.Lottery), global::AElf.Contracts.Lottery.Lottery.Parser, new[]{ "LotteryCode", "IssueTimestamp", "AwardIdList", "Owner", "LatestClaimedAwardId", "LotteryTotalAwardAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.Int64List), global::AElf.Contracts.Lottery.Int64List.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.Award), global::AElf.Contracts.Lottery.Award.Parser, new[]{ "AwardId", "AwardAmount", "LotteryCode", "IsClaimed", "Owner", "Period" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.AwardList), global::AElf.Contracts.Lottery.AwardList.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.PeriodAward), global::AElf.Contracts.Lottery.PeriodAward.Parser, new[]{ "PeriodId", "StartTimestamp", "EndTimestamp", "UsedRandomHashes", "StartAwardId", "EndAwardId", "DrewAwardId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.DrawInput), global::AElf.Contracts.Lottery.DrawInput.Parser, new[]{ "PeriodId", "NextAwardList", "ToAwardId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.GetAwardListInput), global::AElf.Contracts.Lottery.GetAwardListInput.Parser, new[]{ "PeriodId", "StartIndex", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.AwardAmountMap), global::AElf.Contracts.Lottery.AwardAmountMap.Parser, new[]{ "Value" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.TxFee), global::AElf.Contracts.Lottery.TxFee.Parser, new[]{ "StakeTxFee", "RedeemTxFee", "ClaimTxFee" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.DrewFinished), global::AElf.Contracts.Lottery.DrewFinished.Parser, new[]{ "PeriodId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.DrewUnfinished), global::AElf.Contracts.Lottery.DrewUnfinished.Parser, new[]{ "PeriodId", "ToAwardId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.Staked), global::AElf.Contracts.Lottery.Staked.Parser, new[]{ "User", "Amount", "LotteryCodeList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.Redeemed), global::AElf.Contracts.Lottery.Redeemed.Parser, new[]{ "User", "Amount", "PeriodId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.Claimed), global::AElf.Contracts.Lottery.Claimed.Parser, new[]{ "User", "Amount", "PeriodId", "ClaimedLotteryCodeList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Lottery.TransactionFeeCharged), global::AElf.Contracts.Lottery.TransactionFeeCharged.Parser, new[]{ "Symbol", "Amount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class InitializeInput : pb::IMessage<InitializeInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitializeInput> _parser = new pb::MessageParser<InitializeInput>(() => new InitializeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitializeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput(InitializeInput other) : this() {
      startTimestamp_ = other.startTimestamp_ != null ? other.startTimestamp_.Clone() : null;
      shutdownTimestamp_ = other.shutdownTimestamp_ != null ? other.shutdownTimestamp_.Clone() : null;
      redeemTimestamp_ = other.redeemTimestamp_ != null ? other.redeemTimestamp_.Clone() : null;
      stopRedeemTimestamp_ = other.stopRedeemTimestamp_ != null ? other.stopRedeemTimestamp_.Clone() : null;
      defaultAwardList_ = other.defaultAwardList_.Clone();
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      isDebug_ = other.isDebug_;
      txFee_ = other.txFee_ != null ? other.txFee_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput Clone() {
      return new InitializeInput(this);
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "shutdown_timestamp" field.</summary>
    public const int ShutdownTimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp shutdownTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ShutdownTimestamp {
      get { return shutdownTimestamp_; }
      set {
        shutdownTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "redeem_timestamp" field.</summary>
    public const int RedeemTimestampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp redeemTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RedeemTimestamp {
      get { return redeemTimestamp_; }
      set {
        redeemTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "stop_redeem_timestamp" field.</summary>
    public const int StopRedeemTimestampFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp stopRedeemTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StopRedeemTimestamp {
      get { return stopRedeemTimestamp_; }
      set {
        stopRedeemTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "default_award_list" field.</summary>
    public const int DefaultAwardListFieldNumber = 5;
    private static readonly pb::FieldCodec<long> _repeated_defaultAwardList_codec
        = pb::FieldCodec.ForInt64(42);
    private readonly pbc::RepeatedField<long> defaultAwardList_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> DefaultAwardList {
      get { return defaultAwardList_; }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 6;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    /// <summary>Field number for the "is_debug" field.</summary>
    public const int IsDebugFieldNumber = 7;
    private bool isDebug_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDebug {
      get { return isDebug_; }
      set {
        isDebug_ = value;
      }
    }

    /// <summary>Field number for the "tx_fee" field.</summary>
    public const int TxFeeFieldNumber = 8;
    private global::AElf.Contracts.Lottery.TxFee txFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.Lottery.TxFee TxFee {
      get { return txFee_; }
      set {
        txFee_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitializeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitializeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTimestamp, other.StartTimestamp)) return false;
      if (!object.Equals(ShutdownTimestamp, other.ShutdownTimestamp)) return false;
      if (!object.Equals(RedeemTimestamp, other.RedeemTimestamp)) return false;
      if (!object.Equals(StopRedeemTimestamp, other.StopRedeemTimestamp)) return false;
      if(!defaultAwardList_.Equals(other.defaultAwardList_)) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      if (IsDebug != other.IsDebug) return false;
      if (!object.Equals(TxFee, other.TxFee)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTimestamp_ != null) hash ^= StartTimestamp.GetHashCode();
      if (shutdownTimestamp_ != null) hash ^= ShutdownTimestamp.GetHashCode();
      if (redeemTimestamp_ != null) hash ^= RedeemTimestamp.GetHashCode();
      if (stopRedeemTimestamp_ != null) hash ^= StopRedeemTimestamp.GetHashCode();
      hash ^= defaultAwardList_.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (IsDebug != false) hash ^= IsDebug.GetHashCode();
      if (txFee_ != null) hash ^= TxFee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startTimestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTimestamp);
      }
      if (shutdownTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ShutdownTimestamp);
      }
      if (redeemTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RedeemTimestamp);
      }
      if (stopRedeemTimestamp_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StopRedeemTimestamp);
      }
      defaultAwardList_.WriteTo(output, _repeated_defaultAwardList_codec);
      if (admin_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Admin);
      }
      if (IsDebug != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsDebug);
      }
      if (txFee_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(TxFee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startTimestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTimestamp);
      }
      if (shutdownTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ShutdownTimestamp);
      }
      if (redeemTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RedeemTimestamp);
      }
      if (stopRedeemTimestamp_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StopRedeemTimestamp);
      }
      defaultAwardList_.WriteTo(ref output, _repeated_defaultAwardList_codec);
      if (admin_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Admin);
      }
      if (IsDebug != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsDebug);
      }
      if (txFee_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(TxFee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimestamp);
      }
      if (shutdownTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShutdownTimestamp);
      }
      if (redeemTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedeemTimestamp);
      }
      if (stopRedeemTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StopRedeemTimestamp);
      }
      size += defaultAwardList_.CalculateSize(_repeated_defaultAwardList_codec);
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (IsDebug != false) {
        size += 1 + 1;
      }
      if (txFee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TxFee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitializeInput other) {
      if (other == null) {
        return;
      }
      if (other.startTimestamp_ != null) {
        if (startTimestamp_ == null) {
          StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTimestamp.MergeFrom(other.StartTimestamp);
      }
      if (other.shutdownTimestamp_ != null) {
        if (shutdownTimestamp_ == null) {
          ShutdownTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ShutdownTimestamp.MergeFrom(other.ShutdownTimestamp);
      }
      if (other.redeemTimestamp_ != null) {
        if (redeemTimestamp_ == null) {
          RedeemTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RedeemTimestamp.MergeFrom(other.RedeemTimestamp);
      }
      if (other.stopRedeemTimestamp_ != null) {
        if (stopRedeemTimestamp_ == null) {
          StopRedeemTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StopRedeemTimestamp.MergeFrom(other.StopRedeemTimestamp);
      }
      defaultAwardList_.Add(other.defaultAwardList_);
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      if (other.IsDebug != false) {
        IsDebug = other.IsDebug;
      }
      if (other.txFee_ != null) {
        if (txFee_ == null) {
          TxFee = new global::AElf.Contracts.Lottery.TxFee();
        }
        TxFee.MergeFrom(other.TxFee);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTimestamp_ == null) {
              StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTimestamp);
            break;
          }
          case 18: {
            if (shutdownTimestamp_ == null) {
              ShutdownTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ShutdownTimestamp);
            break;
          }
          case 26: {
            if (redeemTimestamp_ == null) {
              RedeemTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RedeemTimestamp);
            break;
          }
          case 34: {
            if (stopRedeemTimestamp_ == null) {
              StopRedeemTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StopRedeemTimestamp);
            break;
          }
          case 42:
          case 40: {
            defaultAwardList_.AddEntriesFrom(input, _repeated_defaultAwardList_codec);
            break;
          }
          case 50: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
          case 56: {
            IsDebug = input.ReadBool();
            break;
          }
          case 66: {
            if (txFee_ == null) {
              TxFee = new global::AElf.Contracts.Lottery.TxFee();
            }
            input.ReadMessage(TxFee);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startTimestamp_ == null) {
              StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTimestamp);
            break;
          }
          case 18: {
            if (shutdownTimestamp_ == null) {
              ShutdownTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ShutdownTimestamp);
            break;
          }
          case 26: {
            if (redeemTimestamp_ == null) {
              RedeemTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RedeemTimestamp);
            break;
          }
          case 34: {
            if (stopRedeemTimestamp_ == null) {
              StopRedeemTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StopRedeemTimestamp);
            break;
          }
          case 42:
          case 40: {
            defaultAwardList_.AddEntriesFrom(ref input, _repeated_defaultAwardList_codec);
            break;
          }
          case 50: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
          case 56: {
            IsDebug = input.ReadBool();
            break;
          }
          case 66: {
            if (txFee_ == null) {
              TxFee = new global::AElf.Contracts.Lottery.TxFee();
            }
            input.ReadMessage(TxFee);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OwnLottery : pb::IMessage<OwnLottery>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OwnLottery> _parser = new pb::MessageParser<OwnLottery>(() => new OwnLottery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OwnLottery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnLottery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnLottery(OwnLottery other) : this() {
      lotteryCodeList_ = other.lotteryCodeList_.Clone();
      totalStakingAmount_ = other.totalStakingAmount_;
      totalAwardAmount_ = other.totalAwardAmount_;
      claimedAwardAmount_ = other.claimedAwardAmount_;
      isRedeemed_ = other.isRedeemed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnLottery Clone() {
      return new OwnLottery(this);
    }

    /// <summary>Field number for the "lottery_code_list" field.</summary>
    public const int LotteryCodeListFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_lotteryCodeList_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> lotteryCodeList_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> LotteryCodeList {
      get { return lotteryCodeList_; }
    }

    /// <summary>Field number for the "total_staking_amount" field.</summary>
    public const int TotalStakingAmountFieldNumber = 2;
    private long totalStakingAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalStakingAmount {
      get { return totalStakingAmount_; }
      set {
        totalStakingAmount_ = value;
      }
    }

    /// <summary>Field number for the "total_award_amount" field.</summary>
    public const int TotalAwardAmountFieldNumber = 3;
    private long totalAwardAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalAwardAmount {
      get { return totalAwardAmount_; }
      set {
        totalAwardAmount_ = value;
      }
    }

    /// <summary>Field number for the "claimed_award_amount" field.</summary>
    public const int ClaimedAwardAmountFieldNumber = 4;
    private long claimedAwardAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClaimedAwardAmount {
      get { return claimedAwardAmount_; }
      set {
        claimedAwardAmount_ = value;
      }
    }

    /// <summary>Field number for the "is_redeemed" field.</summary>
    public const int IsRedeemedFieldNumber = 5;
    private bool isRedeemed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRedeemed {
      get { return isRedeemed_; }
      set {
        isRedeemed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OwnLottery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OwnLottery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lotteryCodeList_.Equals(other.lotteryCodeList_)) return false;
      if (TotalStakingAmount != other.TotalStakingAmount) return false;
      if (TotalAwardAmount != other.TotalAwardAmount) return false;
      if (ClaimedAwardAmount != other.ClaimedAwardAmount) return false;
      if (IsRedeemed != other.IsRedeemed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lotteryCodeList_.GetHashCode();
      if (TotalStakingAmount != 0L) hash ^= TotalStakingAmount.GetHashCode();
      if (TotalAwardAmount != 0L) hash ^= TotalAwardAmount.GetHashCode();
      if (ClaimedAwardAmount != 0L) hash ^= ClaimedAwardAmount.GetHashCode();
      if (IsRedeemed != false) hash ^= IsRedeemed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      lotteryCodeList_.WriteTo(output, _repeated_lotteryCodeList_codec);
      if (TotalStakingAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TotalStakingAmount);
      }
      if (TotalAwardAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalAwardAmount);
      }
      if (ClaimedAwardAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ClaimedAwardAmount);
      }
      if (IsRedeemed != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsRedeemed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      lotteryCodeList_.WriteTo(ref output, _repeated_lotteryCodeList_codec);
      if (TotalStakingAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TotalStakingAmount);
      }
      if (TotalAwardAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalAwardAmount);
      }
      if (ClaimedAwardAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ClaimedAwardAmount);
      }
      if (IsRedeemed != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsRedeemed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lotteryCodeList_.CalculateSize(_repeated_lotteryCodeList_codec);
      if (TotalStakingAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalStakingAmount);
      }
      if (TotalAwardAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalAwardAmount);
      }
      if (ClaimedAwardAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClaimedAwardAmount);
      }
      if (IsRedeemed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OwnLottery other) {
      if (other == null) {
        return;
      }
      lotteryCodeList_.Add(other.lotteryCodeList_);
      if (other.TotalStakingAmount != 0L) {
        TotalStakingAmount = other.TotalStakingAmount;
      }
      if (other.TotalAwardAmount != 0L) {
        TotalAwardAmount = other.TotalAwardAmount;
      }
      if (other.ClaimedAwardAmount != 0L) {
        ClaimedAwardAmount = other.ClaimedAwardAmount;
      }
      if (other.IsRedeemed != false) {
        IsRedeemed = other.IsRedeemed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            lotteryCodeList_.AddEntriesFrom(input, _repeated_lotteryCodeList_codec);
            break;
          }
          case 16: {
            TotalStakingAmount = input.ReadInt64();
            break;
          }
          case 24: {
            TotalAwardAmount = input.ReadInt64();
            break;
          }
          case 32: {
            ClaimedAwardAmount = input.ReadInt64();
            break;
          }
          case 40: {
            IsRedeemed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            lotteryCodeList_.AddEntriesFrom(ref input, _repeated_lotteryCodeList_codec);
            break;
          }
          case 16: {
            TotalStakingAmount = input.ReadInt64();
            break;
          }
          case 24: {
            TotalAwardAmount = input.ReadInt64();
            break;
          }
          case 32: {
            ClaimedAwardAmount = input.ReadInt64();
            break;
          }
          case 40: {
            IsRedeemed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Lottery : pb::IMessage<Lottery>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Lottery> _parser = new pb::MessageParser<Lottery>(() => new Lottery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Lottery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lottery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lottery(Lottery other) : this() {
      lotteryCode_ = other.lotteryCode_;
      issueTimestamp_ = other.issueTimestamp_ != null ? other.issueTimestamp_.Clone() : null;
      awardIdList_ = other.awardIdList_.Clone();
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      latestClaimedAwardId_ = other.latestClaimedAwardId_;
      lotteryTotalAwardAmount_ = other.lotteryTotalAwardAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lottery Clone() {
      return new Lottery(this);
    }

    /// <summary>Field number for the "lottery_code" field.</summary>
    public const int LotteryCodeFieldNumber = 1;
    private long lotteryCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LotteryCode {
      get { return lotteryCode_; }
      set {
        lotteryCode_ = value;
      }
    }

    /// <summary>Field number for the "issue_timestamp" field.</summary>
    public const int IssueTimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp issueTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp IssueTimestamp {
      get { return issueTimestamp_; }
      set {
        issueTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "award_id_list" field.</summary>
    public const int AwardIdListFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_awardIdList_codec
        = pb::FieldCodec.ForInt64(26);
    private readonly pbc::RepeatedField<long> awardIdList_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> AwardIdList {
      get { return awardIdList_; }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 4;
    private global::AElf.Types.Address owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "latest_claimed_award_id" field.</summary>
    public const int LatestClaimedAwardIdFieldNumber = 5;
    private long latestClaimedAwardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LatestClaimedAwardId {
      get { return latestClaimedAwardId_; }
      set {
        latestClaimedAwardId_ = value;
      }
    }

    /// <summary>Field number for the "lottery_total_award_amount" field.</summary>
    public const int LotteryTotalAwardAmountFieldNumber = 6;
    private long lotteryTotalAwardAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LotteryTotalAwardAmount {
      get { return lotteryTotalAwardAmount_; }
      set {
        lotteryTotalAwardAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Lottery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Lottery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LotteryCode != other.LotteryCode) return false;
      if (!object.Equals(IssueTimestamp, other.IssueTimestamp)) return false;
      if(!awardIdList_.Equals(other.awardIdList_)) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      if (LatestClaimedAwardId != other.LatestClaimedAwardId) return false;
      if (LotteryTotalAwardAmount != other.LotteryTotalAwardAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LotteryCode != 0L) hash ^= LotteryCode.GetHashCode();
      if (issueTimestamp_ != null) hash ^= IssueTimestamp.GetHashCode();
      hash ^= awardIdList_.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (LatestClaimedAwardId != 0L) hash ^= LatestClaimedAwardId.GetHashCode();
      if (LotteryTotalAwardAmount != 0L) hash ^= LotteryTotalAwardAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LotteryCode != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LotteryCode);
      }
      if (issueTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IssueTimestamp);
      }
      awardIdList_.WriteTo(output, _repeated_awardIdList_codec);
      if (owner_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Owner);
      }
      if (LatestClaimedAwardId != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(LatestClaimedAwardId);
      }
      if (LotteryTotalAwardAmount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LotteryTotalAwardAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LotteryCode != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LotteryCode);
      }
      if (issueTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IssueTimestamp);
      }
      awardIdList_.WriteTo(ref output, _repeated_awardIdList_codec);
      if (owner_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Owner);
      }
      if (LatestClaimedAwardId != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(LatestClaimedAwardId);
      }
      if (LotteryTotalAwardAmount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LotteryTotalAwardAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LotteryCode != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LotteryCode);
      }
      if (issueTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IssueTimestamp);
      }
      size += awardIdList_.CalculateSize(_repeated_awardIdList_codec);
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (LatestClaimedAwardId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LatestClaimedAwardId);
      }
      if (LotteryTotalAwardAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LotteryTotalAwardAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Lottery other) {
      if (other == null) {
        return;
      }
      if (other.LotteryCode != 0L) {
        LotteryCode = other.LotteryCode;
      }
      if (other.issueTimestamp_ != null) {
        if (issueTimestamp_ == null) {
          IssueTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        IssueTimestamp.MergeFrom(other.IssueTimestamp);
      }
      awardIdList_.Add(other.awardIdList_);
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::AElf.Types.Address();
        }
        Owner.MergeFrom(other.Owner);
      }
      if (other.LatestClaimedAwardId != 0L) {
        LatestClaimedAwardId = other.LatestClaimedAwardId;
      }
      if (other.LotteryTotalAwardAmount != 0L) {
        LotteryTotalAwardAmount = other.LotteryTotalAwardAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LotteryCode = input.ReadInt64();
            break;
          }
          case 18: {
            if (issueTimestamp_ == null) {
              IssueTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(IssueTimestamp);
            break;
          }
          case 26:
          case 24: {
            awardIdList_.AddEntriesFrom(input, _repeated_awardIdList_codec);
            break;
          }
          case 34: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 40: {
            LatestClaimedAwardId = input.ReadInt64();
            break;
          }
          case 48: {
            LotteryTotalAwardAmount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LotteryCode = input.ReadInt64();
            break;
          }
          case 18: {
            if (issueTimestamp_ == null) {
              IssueTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(IssueTimestamp);
            break;
          }
          case 26:
          case 24: {
            awardIdList_.AddEntriesFrom(ref input, _repeated_awardIdList_codec);
            break;
          }
          case 34: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 40: {
            LatestClaimedAwardId = input.ReadInt64();
            break;
          }
          case 48: {
            LotteryTotalAwardAmount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Show lottery codes.
  /// </summary>
  public sealed partial class Int64List : pb::IMessage<Int64List>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Int64List> _parser = new pb::MessageParser<Int64List>(() => new Int64List());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Int64List> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64List() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64List(Int64List other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64List Clone() {
      return new Int64List(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_value_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> value_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Int64List);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Int64List other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Int64List other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Award : pb::IMessage<Award>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Award> _parser = new pb::MessageParser<Award>(() => new Award());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Award> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Award() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Award(Award other) : this() {
      awardId_ = other.awardId_;
      awardAmount_ = other.awardAmount_;
      lotteryCode_ = other.lotteryCode_;
      isClaimed_ = other.isClaimed_;
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      period_ = other.period_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Award Clone() {
      return new Award(this);
    }

    /// <summary>Field number for the "award_id" field.</summary>
    public const int AwardIdFieldNumber = 1;
    private long awardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AwardId {
      get { return awardId_; }
      set {
        awardId_ = value;
      }
    }

    /// <summary>Field number for the "award_amount" field.</summary>
    public const int AwardAmountFieldNumber = 2;
    private long awardAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AwardAmount {
      get { return awardAmount_; }
      set {
        awardAmount_ = value;
      }
    }

    /// <summary>Field number for the "lottery_code" field.</summary>
    public const int LotteryCodeFieldNumber = 3;
    private long lotteryCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LotteryCode {
      get { return lotteryCode_; }
      set {
        lotteryCode_ = value;
      }
    }

    /// <summary>Field number for the "is_claimed" field.</summary>
    public const int IsClaimedFieldNumber = 4;
    private bool isClaimed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsClaimed {
      get { return isClaimed_; }
      set {
        isClaimed_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 5;
    private global::AElf.Types.Address owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 6;
    private int period_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Award);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Award other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AwardId != other.AwardId) return false;
      if (AwardAmount != other.AwardAmount) return false;
      if (LotteryCode != other.LotteryCode) return false;
      if (IsClaimed != other.IsClaimed) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      if (Period != other.Period) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AwardId != 0L) hash ^= AwardId.GetHashCode();
      if (AwardAmount != 0L) hash ^= AwardAmount.GetHashCode();
      if (LotteryCode != 0L) hash ^= LotteryCode.GetHashCode();
      if (IsClaimed != false) hash ^= IsClaimed.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (Period != 0) hash ^= Period.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AwardId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AwardId);
      }
      if (AwardAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AwardAmount);
      }
      if (LotteryCode != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LotteryCode);
      }
      if (IsClaimed != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsClaimed);
      }
      if (owner_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Owner);
      }
      if (Period != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Period);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AwardId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AwardId);
      }
      if (AwardAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AwardAmount);
      }
      if (LotteryCode != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LotteryCode);
      }
      if (IsClaimed != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsClaimed);
      }
      if (owner_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Owner);
      }
      if (Period != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Period);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AwardId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AwardId);
      }
      if (AwardAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AwardAmount);
      }
      if (LotteryCode != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LotteryCode);
      }
      if (IsClaimed != false) {
        size += 1 + 1;
      }
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (Period != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Period);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Award other) {
      if (other == null) {
        return;
      }
      if (other.AwardId != 0L) {
        AwardId = other.AwardId;
      }
      if (other.AwardAmount != 0L) {
        AwardAmount = other.AwardAmount;
      }
      if (other.LotteryCode != 0L) {
        LotteryCode = other.LotteryCode;
      }
      if (other.IsClaimed != false) {
        IsClaimed = other.IsClaimed;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::AElf.Types.Address();
        }
        Owner.MergeFrom(other.Owner);
      }
      if (other.Period != 0) {
        Period = other.Period;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AwardId = input.ReadInt64();
            break;
          }
          case 16: {
            AwardAmount = input.ReadInt64();
            break;
          }
          case 24: {
            LotteryCode = input.ReadInt64();
            break;
          }
          case 32: {
            IsClaimed = input.ReadBool();
            break;
          }
          case 42: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 48: {
            Period = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AwardId = input.ReadInt64();
            break;
          }
          case 16: {
            AwardAmount = input.ReadInt64();
            break;
          }
          case 24: {
            LotteryCode = input.ReadInt64();
            break;
          }
          case 32: {
            IsClaimed = input.ReadBool();
            break;
          }
          case 42: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 48: {
            Period = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AwardList : pb::IMessage<AwardList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardList> _parser = new pb::MessageParser<AwardList>(() => new AwardList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AwardList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardList(AwardList other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardList Clone() {
      return new AwardList(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Contracts.Lottery.Award> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Contracts.Lottery.Award.Parser);
    private readonly pbc::RepeatedField<global::AElf.Contracts.Lottery.Award> value_ = new pbc::RepeatedField<global::AElf.Contracts.Lottery.Award>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Contracts.Lottery.Award> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AwardList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AwardList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AwardList other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PeriodAward : pb::IMessage<PeriodAward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PeriodAward> _parser = new pb::MessageParser<PeriodAward>(() => new PeriodAward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeriodAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeriodAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeriodAward(PeriodAward other) : this() {
      periodId_ = other.periodId_;
      startTimestamp_ = other.startTimestamp_ != null ? other.startTimestamp_.Clone() : null;
      endTimestamp_ = other.endTimestamp_ != null ? other.endTimestamp_.Clone() : null;
      usedRandomHashes_ = other.usedRandomHashes_.Clone();
      startAwardId_ = other.startAwardId_;
      endAwardId_ = other.endAwardId_;
      drewAwardId_ = other.drewAwardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeriodAward Clone() {
      return new PeriodAward(this);
    }

    /// <summary>Field number for the "period_id" field.</summary>
    public const int PeriodIdFieldNumber = 1;
    private int periodId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PeriodId {
      get { return periodId_; }
      set {
        periodId_ = value;
      }
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "end_timestamp" field.</summary>
    public const int EndTimestampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTimestamp_;
    /// <summary>
    /// Also draw timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTimestamp {
      get { return endTimestamp_; }
      set {
        endTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "used_random_hashes" field.</summary>
    public const int UsedRandomHashesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_usedRandomHashes_codec
        = pb::FieldCodec.ForMessage(34, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> usedRandomHashes_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Hash> UsedRandomHashes {
      get { return usedRandomHashes_; }
    }

    /// <summary>Field number for the "start_award_id" field.</summary>
    public const int StartAwardIdFieldNumber = 5;
    private long startAwardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartAwardId {
      get { return startAwardId_; }
      set {
        startAwardId_ = value;
      }
    }

    /// <summary>Field number for the "end_award_id" field.</summary>
    public const int EndAwardIdFieldNumber = 6;
    private long endAwardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndAwardId {
      get { return endAwardId_; }
      set {
        endAwardId_ = value;
      }
    }

    /// <summary>Field number for the "drew_award_id" field.</summary>
    public const int DrewAwardIdFieldNumber = 7;
    private long drewAwardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DrewAwardId {
      get { return drewAwardId_; }
      set {
        drewAwardId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeriodAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeriodAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PeriodId != other.PeriodId) return false;
      if (!object.Equals(StartTimestamp, other.StartTimestamp)) return false;
      if (!object.Equals(EndTimestamp, other.EndTimestamp)) return false;
      if(!usedRandomHashes_.Equals(other.usedRandomHashes_)) return false;
      if (StartAwardId != other.StartAwardId) return false;
      if (EndAwardId != other.EndAwardId) return false;
      if (DrewAwardId != other.DrewAwardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
      if (startTimestamp_ != null) hash ^= StartTimestamp.GetHashCode();
      if (endTimestamp_ != null) hash ^= EndTimestamp.GetHashCode();
      hash ^= usedRandomHashes_.GetHashCode();
      if (StartAwardId != 0L) hash ^= StartAwardId.GetHashCode();
      if (EndAwardId != 0L) hash ^= EndAwardId.GetHashCode();
      if (DrewAwardId != 0L) hash ^= DrewAwardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PeriodId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PeriodId);
      }
      if (startTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTimestamp);
      }
      if (endTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTimestamp);
      }
      usedRandomHashes_.WriteTo(output, _repeated_usedRandomHashes_codec);
      if (StartAwardId != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(StartAwardId);
      }
      if (EndAwardId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(EndAwardId);
      }
      if (DrewAwardId != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(DrewAwardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PeriodId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PeriodId);
      }
      if (startTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTimestamp);
      }
      if (endTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTimestamp);
      }
      usedRandomHashes_.WriteTo(ref output, _repeated_usedRandomHashes_codec);
      if (StartAwardId != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(StartAwardId);
      }
      if (EndAwardId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(EndAwardId);
      }
      if (DrewAwardId != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(DrewAwardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PeriodId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PeriodId);
      }
      if (startTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimestamp);
      }
      if (endTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTimestamp);
      }
      size += usedRandomHashes_.CalculateSize(_repeated_usedRandomHashes_codec);
      if (StartAwardId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartAwardId);
      }
      if (EndAwardId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndAwardId);
      }
      if (DrewAwardId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DrewAwardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeriodAward other) {
      if (other == null) {
        return;
      }
      if (other.PeriodId != 0) {
        PeriodId = other.PeriodId;
      }
      if (other.startTimestamp_ != null) {
        if (startTimestamp_ == null) {
          StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTimestamp.MergeFrom(other.StartTimestamp);
      }
      if (other.endTimestamp_ != null) {
        if (endTimestamp_ == null) {
          EndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTimestamp.MergeFrom(other.EndTimestamp);
      }
      usedRandomHashes_.Add(other.usedRandomHashes_);
      if (other.StartAwardId != 0L) {
        StartAwardId = other.StartAwardId;
      }
      if (other.EndAwardId != 0L) {
        EndAwardId = other.EndAwardId;
      }
      if (other.DrewAwardId != 0L) {
        DrewAwardId = other.DrewAwardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PeriodId = input.ReadInt32();
            break;
          }
          case 18: {
            if (startTimestamp_ == null) {
              StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTimestamp);
            break;
          }
          case 26: {
            if (endTimestamp_ == null) {
              EndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTimestamp);
            break;
          }
          case 34: {
            usedRandomHashes_.AddEntriesFrom(input, _repeated_usedRandomHashes_codec);
            break;
          }
          case 40: {
            StartAwardId = input.ReadInt64();
            break;
          }
          case 48: {
            EndAwardId = input.ReadInt64();
            break;
          }
          case 56: {
            DrewAwardId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PeriodId = input.ReadInt32();
            break;
          }
          case 18: {
            if (startTimestamp_ == null) {
              StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTimestamp);
            break;
          }
          case 26: {
            if (endTimestamp_ == null) {
              EndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTimestamp);
            break;
          }
          case 34: {
            usedRandomHashes_.AddEntriesFrom(ref input, _repeated_usedRandomHashes_codec);
            break;
          }
          case 40: {
            StartAwardId = input.ReadInt64();
            break;
          }
          case 48: {
            EndAwardId = input.ReadInt64();
            break;
          }
          case 56: {
            DrewAwardId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DrawInput : pb::IMessage<DrawInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DrawInput> _parser = new pb::MessageParser<DrawInput>(() => new DrawInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DrawInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawInput(DrawInput other) : this() {
      periodId_ = other.periodId_;
      nextAwardList_ = other.nextAwardList_.Clone();
      toAwardId_ = other.toAwardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrawInput Clone() {
      return new DrawInput(this);
    }

    /// <summary>Field number for the "period_id" field.</summary>
    public const int PeriodIdFieldNumber = 1;
    private int periodId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PeriodId {
      get { return periodId_; }
      set {
        periodId_ = value;
      }
    }

    /// <summary>Field number for the "next_award_list" field.</summary>
    public const int NextAwardListFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_nextAwardList_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> nextAwardList_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> NextAwardList {
      get { return nextAwardList_; }
    }

    /// <summary>Field number for the "to_award_id" field.</summary>
    public const int ToAwardIdFieldNumber = 3;
    private long toAwardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ToAwardId {
      get { return toAwardId_; }
      set {
        toAwardId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DrawInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DrawInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PeriodId != other.PeriodId) return false;
      if(!nextAwardList_.Equals(other.nextAwardList_)) return false;
      if (ToAwardId != other.ToAwardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
      hash ^= nextAwardList_.GetHashCode();
      if (ToAwardId != 0L) hash ^= ToAwardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PeriodId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PeriodId);
      }
      nextAwardList_.WriteTo(output, _repeated_nextAwardList_codec);
      if (ToAwardId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ToAwardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PeriodId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PeriodId);
      }
      nextAwardList_.WriteTo(ref output, _repeated_nextAwardList_codec);
      if (ToAwardId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ToAwardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PeriodId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PeriodId);
      }
      size += nextAwardList_.CalculateSize(_repeated_nextAwardList_codec);
      if (ToAwardId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToAwardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DrawInput other) {
      if (other == null) {
        return;
      }
      if (other.PeriodId != 0) {
        PeriodId = other.PeriodId;
      }
      nextAwardList_.Add(other.nextAwardList_);
      if (other.ToAwardId != 0L) {
        ToAwardId = other.ToAwardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PeriodId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            nextAwardList_.AddEntriesFrom(input, _repeated_nextAwardList_codec);
            break;
          }
          case 24: {
            ToAwardId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PeriodId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            nextAwardList_.AddEntriesFrom(ref input, _repeated_nextAwardList_codec);
            break;
          }
          case 24: {
            ToAwardId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetAwardListInput : pb::IMessage<GetAwardListInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAwardListInput> _parser = new pb::MessageParser<GetAwardListInput>(() => new GetAwardListInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAwardListInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAwardListInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAwardListInput(GetAwardListInput other) : this() {
      periodId_ = other.periodId_;
      startIndex_ = other.startIndex_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAwardListInput Clone() {
      return new GetAwardListInput(this);
    }

    /// <summary>Field number for the "period_id" field.</summary>
    public const int PeriodIdFieldNumber = 1;
    private int periodId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PeriodId {
      get { return periodId_; }
      set {
        periodId_ = value;
      }
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 2;
    private long startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 3;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAwardListInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAwardListInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PeriodId != other.PeriodId) return false;
      if (StartIndex != other.StartIndex) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
      if (StartIndex != 0L) hash ^= StartIndex.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PeriodId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PeriodId);
      }
      if (StartIndex != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartIndex);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PeriodId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PeriodId);
      }
      if (StartIndex != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartIndex);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PeriodId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PeriodId);
      }
      if (StartIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartIndex);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAwardListInput other) {
      if (other == null) {
        return;
      }
      if (other.PeriodId != 0) {
        PeriodId = other.PeriodId;
      }
      if (other.StartIndex != 0L) {
        StartIndex = other.StartIndex;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PeriodId = input.ReadInt32();
            break;
          }
          case 16: {
            StartIndex = input.ReadInt64();
            break;
          }
          case 24: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PeriodId = input.ReadInt32();
            break;
          }
          case 16: {
            StartIndex = input.ReadInt64();
            break;
          }
          case 24: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AwardAmountMap : pb::IMessage<AwardAmountMap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardAmountMap> _parser = new pb::MessageParser<AwardAmountMap>(() => new AwardAmountMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AwardAmountMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardAmountMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardAmountMap(AwardAmountMap other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardAmountMap Clone() {
      return new AwardAmountMap(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pbc::MapField<long, long>.Codec _map_value_codec
        = new pbc::MapField<long, long>.Codec(pb::FieldCodec.ForInt64(8, 0L), pb::FieldCodec.ForInt64(16, 0L), 10);
    private readonly pbc::MapField<long, long> value_ = new pbc::MapField<long, long>();
    /// <summary>
    /// Lottery Code -> Award Amount
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<long, long> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AwardAmountMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AwardAmountMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Value.Equals(other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _map_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _map_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_map_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AwardAmountMap other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _map_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            value_.AddEntriesFrom(ref input, _map_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TxFee : pb::IMessage<TxFee>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TxFee> _parser = new pb::MessageParser<TxFee>(() => new TxFee());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TxFee> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxFee() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxFee(TxFee other) : this() {
      stakeTxFee_ = other.stakeTxFee_;
      redeemTxFee_ = other.redeemTxFee_;
      claimTxFee_ = other.claimTxFee_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TxFee Clone() {
      return new TxFee(this);
    }

    /// <summary>Field number for the "stake_tx_fee" field.</summary>
    public const int StakeTxFeeFieldNumber = 1;
    private long stakeTxFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StakeTxFee {
      get { return stakeTxFee_; }
      set {
        stakeTxFee_ = value;
      }
    }

    /// <summary>Field number for the "redeem_tx_fee" field.</summary>
    public const int RedeemTxFeeFieldNumber = 2;
    private long redeemTxFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RedeemTxFee {
      get { return redeemTxFee_; }
      set {
        redeemTxFee_ = value;
      }
    }

    /// <summary>Field number for the "claim_tx_fee" field.</summary>
    public const int ClaimTxFeeFieldNumber = 3;
    private long claimTxFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClaimTxFee {
      get { return claimTxFee_; }
      set {
        claimTxFee_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TxFee);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TxFee other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StakeTxFee != other.StakeTxFee) return false;
      if (RedeemTxFee != other.RedeemTxFee) return false;
      if (ClaimTxFee != other.ClaimTxFee) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StakeTxFee != 0L) hash ^= StakeTxFee.GetHashCode();
      if (RedeemTxFee != 0L) hash ^= RedeemTxFee.GetHashCode();
      if (ClaimTxFee != 0L) hash ^= ClaimTxFee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StakeTxFee != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StakeTxFee);
      }
      if (RedeemTxFee != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RedeemTxFee);
      }
      if (ClaimTxFee != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ClaimTxFee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StakeTxFee != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StakeTxFee);
      }
      if (RedeemTxFee != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RedeemTxFee);
      }
      if (ClaimTxFee != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ClaimTxFee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StakeTxFee != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StakeTxFee);
      }
      if (RedeemTxFee != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RedeemTxFee);
      }
      if (ClaimTxFee != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClaimTxFee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TxFee other) {
      if (other == null) {
        return;
      }
      if (other.StakeTxFee != 0L) {
        StakeTxFee = other.StakeTxFee;
      }
      if (other.RedeemTxFee != 0L) {
        RedeemTxFee = other.RedeemTxFee;
      }
      if (other.ClaimTxFee != 0L) {
        ClaimTxFee = other.ClaimTxFee;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StakeTxFee = input.ReadInt64();
            break;
          }
          case 16: {
            RedeemTxFee = input.ReadInt64();
            break;
          }
          case 24: {
            ClaimTxFee = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StakeTxFee = input.ReadInt64();
            break;
          }
          case 16: {
            RedeemTxFee = input.ReadInt64();
            break;
          }
          case 24: {
            ClaimTxFee = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DrewFinished : pb::IMessage<DrewFinished>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DrewFinished> _parser = new pb::MessageParser<DrewFinished>(() => new DrewFinished());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DrewFinished> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrewFinished() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrewFinished(DrewFinished other) : this() {
      periodId_ = other.periodId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrewFinished Clone() {
      return new DrewFinished(this);
    }

    /// <summary>Field number for the "period_id" field.</summary>
    public const int PeriodIdFieldNumber = 1;
    private long periodId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PeriodId {
      get { return periodId_; }
      set {
        periodId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DrewFinished);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DrewFinished other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PeriodId != other.PeriodId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PeriodId != 0L) hash ^= PeriodId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PeriodId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PeriodId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PeriodId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PeriodId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PeriodId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PeriodId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DrewFinished other) {
      if (other == null) {
        return;
      }
      if (other.PeriodId != 0L) {
        PeriodId = other.PeriodId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PeriodId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PeriodId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DrewUnfinished : pb::IMessage<DrewUnfinished>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DrewUnfinished> _parser = new pb::MessageParser<DrewUnfinished>(() => new DrewUnfinished());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DrewUnfinished> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrewUnfinished() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrewUnfinished(DrewUnfinished other) : this() {
      periodId_ = other.periodId_;
      toAwardId_ = other.toAwardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrewUnfinished Clone() {
      return new DrewUnfinished(this);
    }

    /// <summary>Field number for the "period_id" field.</summary>
    public const int PeriodIdFieldNumber = 1;
    private long periodId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PeriodId {
      get { return periodId_; }
      set {
        periodId_ = value;
      }
    }

    /// <summary>Field number for the "to_award_id" field.</summary>
    public const int ToAwardIdFieldNumber = 2;
    private long toAwardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ToAwardId {
      get { return toAwardId_; }
      set {
        toAwardId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DrewUnfinished);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DrewUnfinished other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PeriodId != other.PeriodId) return false;
      if (ToAwardId != other.ToAwardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PeriodId != 0L) hash ^= PeriodId.GetHashCode();
      if (ToAwardId != 0L) hash ^= ToAwardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PeriodId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PeriodId);
      }
      if (ToAwardId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ToAwardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PeriodId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PeriodId);
      }
      if (ToAwardId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ToAwardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PeriodId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PeriodId);
      }
      if (ToAwardId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToAwardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DrewUnfinished other) {
      if (other == null) {
        return;
      }
      if (other.PeriodId != 0L) {
        PeriodId = other.PeriodId;
      }
      if (other.ToAwardId != 0L) {
        ToAwardId = other.ToAwardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PeriodId = input.ReadInt64();
            break;
          }
          case 16: {
            ToAwardId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PeriodId = input.ReadInt64();
            break;
          }
          case 16: {
            ToAwardId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Staked : pb::IMessage<Staked>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Staked> _parser = new pb::MessageParser<Staked>(() => new Staked());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Staked> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Staked() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Staked(Staked other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      amount_ = other.amount_;
      lotteryCodeList_ = other.lotteryCodeList_ != null ? other.lotteryCodeList_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Staked Clone() {
      return new Staked(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::AElf.Types.Address user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "lottery_code_list" field.</summary>
    public const int LotteryCodeListFieldNumber = 3;
    private global::AElf.Contracts.Lottery.Int64List lotteryCodeList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.Lottery.Int64List LotteryCodeList {
      get { return lotteryCodeList_; }
      set {
        lotteryCodeList_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Staked);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Staked other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(LotteryCodeList, other.LotteryCodeList)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (lotteryCodeList_ != null) hash ^= LotteryCodeList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (lotteryCodeList_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LotteryCodeList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (lotteryCodeList_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LotteryCodeList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (lotteryCodeList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LotteryCodeList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Staked other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::AElf.Types.Address();
        }
        User.MergeFrom(other.User);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.lotteryCodeList_ != null) {
        if (lotteryCodeList_ == null) {
          LotteryCodeList = new global::AElf.Contracts.Lottery.Int64List();
        }
        LotteryCodeList.MergeFrom(other.LotteryCodeList);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::AElf.Types.Address();
            }
            input.ReadMessage(User);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            if (lotteryCodeList_ == null) {
              LotteryCodeList = new global::AElf.Contracts.Lottery.Int64List();
            }
            input.ReadMessage(LotteryCodeList);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::AElf.Types.Address();
            }
            input.ReadMessage(User);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            if (lotteryCodeList_ == null) {
              LotteryCodeList = new global::AElf.Contracts.Lottery.Int64List();
            }
            input.ReadMessage(LotteryCodeList);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Redeemed : pb::IMessage<Redeemed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Redeemed> _parser = new pb::MessageParser<Redeemed>(() => new Redeemed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Redeemed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Redeemed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Redeemed(Redeemed other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      amount_ = other.amount_;
      periodId_ = other.periodId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Redeemed Clone() {
      return new Redeemed(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::AElf.Types.Address user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "period_id" field.</summary>
    public const int PeriodIdFieldNumber = 3;
    private long periodId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PeriodId {
      get { return periodId_; }
      set {
        periodId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Redeemed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Redeemed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (Amount != other.Amount) return false;
      if (PeriodId != other.PeriodId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (PeriodId != 0L) hash ^= PeriodId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (PeriodId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PeriodId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (PeriodId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PeriodId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (PeriodId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PeriodId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Redeemed other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::AElf.Types.Address();
        }
        User.MergeFrom(other.User);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.PeriodId != 0L) {
        PeriodId = other.PeriodId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::AElf.Types.Address();
            }
            input.ReadMessage(User);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            PeriodId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::AElf.Types.Address();
            }
            input.ReadMessage(User);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            PeriodId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Claimed : pb::IMessage<Claimed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Claimed> _parser = new pb::MessageParser<Claimed>(() => new Claimed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Claimed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Claimed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Claimed(Claimed other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      amount_ = other.amount_;
      periodId_ = other.periodId_;
      claimedLotteryCodeList_ = other.claimedLotteryCodeList_ != null ? other.claimedLotteryCodeList_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Claimed Clone() {
      return new Claimed(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::AElf.Types.Address user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "period_id" field.</summary>
    public const int PeriodIdFieldNumber = 3;
    private long periodId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PeriodId {
      get { return periodId_; }
      set {
        periodId_ = value;
      }
    }

    /// <summary>Field number for the "claimed_lottery_code_list" field.</summary>
    public const int ClaimedLotteryCodeListFieldNumber = 4;
    private global::AElf.Contracts.Lottery.Int64List claimedLotteryCodeList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.Lottery.Int64List ClaimedLotteryCodeList {
      get { return claimedLotteryCodeList_; }
      set {
        claimedLotteryCodeList_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Claimed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Claimed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (Amount != other.Amount) return false;
      if (PeriodId != other.PeriodId) return false;
      if (!object.Equals(ClaimedLotteryCodeList, other.ClaimedLotteryCodeList)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (PeriodId != 0L) hash ^= PeriodId.GetHashCode();
      if (claimedLotteryCodeList_ != null) hash ^= ClaimedLotteryCodeList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (PeriodId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PeriodId);
      }
      if (claimedLotteryCodeList_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClaimedLotteryCodeList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (PeriodId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PeriodId);
      }
      if (claimedLotteryCodeList_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClaimedLotteryCodeList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (PeriodId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PeriodId);
      }
      if (claimedLotteryCodeList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClaimedLotteryCodeList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Claimed other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::AElf.Types.Address();
        }
        User.MergeFrom(other.User);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.PeriodId != 0L) {
        PeriodId = other.PeriodId;
      }
      if (other.claimedLotteryCodeList_ != null) {
        if (claimedLotteryCodeList_ == null) {
          ClaimedLotteryCodeList = new global::AElf.Contracts.Lottery.Int64List();
        }
        ClaimedLotteryCodeList.MergeFrom(other.ClaimedLotteryCodeList);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::AElf.Types.Address();
            }
            input.ReadMessage(User);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            PeriodId = input.ReadInt64();
            break;
          }
          case 34: {
            if (claimedLotteryCodeList_ == null) {
              ClaimedLotteryCodeList = new global::AElf.Contracts.Lottery.Int64List();
            }
            input.ReadMessage(ClaimedLotteryCodeList);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::AElf.Types.Address();
            }
            input.ReadMessage(User);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            PeriodId = input.ReadInt64();
            break;
          }
          case 34: {
            if (claimedLotteryCodeList_ == null) {
              ClaimedLotteryCodeList = new global::AElf.Contracts.Lottery.Int64List();
            }
            input.ReadMessage(ClaimedLotteryCodeList);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TransactionFeeCharged : pb::IMessage<TransactionFeeCharged>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransactionFeeCharged> _parser = new pb::MessageParser<TransactionFeeCharged>(() => new TransactionFeeCharged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionFeeCharged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Lottery.LotteryContractReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionFeeCharged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionFeeCharged(TransactionFeeCharged other) : this() {
      symbol_ = other.symbol_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionFeeCharged Clone() {
      return new TransactionFeeCharged(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionFeeCharged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionFeeCharged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionFeeCharged other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
